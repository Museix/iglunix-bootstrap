#!/bin/sh -e
[ -f "$REPO_ROOT/.libcxx" ] && exit 0
./24-libexecinfo.sh

cd "$BUILD"
mkdir -p libcxx
cd libcxx



cmake -G Ninja "$SOURCES/llvm-$LLVM_VER/runtimes" \
-DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;libunwind" \
-DLIBUNWIND_USE_COMPILER_RT=ON \
-DLIBCXXABI_USE_COMPILER_RT=ON \
-DLIBUNWIND_USE_COMPILER_RT=ON \
-DLIBUNWIND_SUPPORTS_FNO_EXCEPTIONS_FLAG=1 \
-DCXX_SUPPORTS_FNO_EXCEPTIONS_FLAG=1 \
-DLIBCXXABI_USE_LLVM_UNWINDER=ON \
-DLLVM_LIBGCC_EXPLICIT_OPT_IN=Yes \
-DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=YES \
-DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
-DLIBCXXABI_ENABLE_SHARED=ON \
-DLIBCXXABI_ENABLE_STATIC=ON \
-DLIBCXXABI_INSTALL_LIBRARY=ON \
-DLIBCXX_INSTALL_LIBRARY=ON \
-DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
-DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=ON \
-DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
-DLIBCXX_USE_COMPILER_RT=ON \
-DLIBCXX_ENABLE_FILESYSTEM=ON \
-DENABLE_EXPERIMENTAL_NEW_PASS_MANAGER=TRUE \
-DLIBCXX_HAS_ATOMIC_LIB=ON \
-DLIBCXX_HAS_MUSL_LIBC=ON \
-DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=YES \
-DLIBCXX_ENABLE_STATIC=ON \
-DLIBCXX_ENABLE_SHARED=ON \
-DLIBCXXABI_ENABLE_SHARED=ON \
-DLIBCXXABI_ENABLE_STATIC=ON \
-DCMAKE_C_COMPILER="$CC" \
-DCMAKE_CXX_COMPILER="$CXX" \
-DCMAKE_C_COMPILER_TARGET=$TARGET \
-DCMAKE_CXX_COMPILER_TARGET=$TARGET \
-DCMAKE_ASM_COMPILER_TARGET=$TARGET \
-DCMAKE_C_FLAGS="$CFLAGS" \
-DCMAKE_ASM_FLAGS="$CFLAGS" \
-DCMAKE_CXX_FLAGS="$CXXFLAGS" \
-DCMAKE_SYSROOT=$SYSROOT \
-DCMAKE_INSTALL_PREFIX=/usr \
-DCMAKE_THREAD_LIBS_INIT="-lc" \
-DCMAKE_C_COMPILER_WORKS=1 \
-DCMAKE_CXX_COMPILER_WORKS=1

samu
DESTDIR=$SYSROOT samu install

touch $REPO_ROOT/.libcxx
