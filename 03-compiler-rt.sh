#!/bin/sh -e
[ -f "$REPO_ROOT/.compiler-rt" ] && exit 0

cd "$BUILD"
#mkdir -p llvm
#cd llvm
#cmake -B build -G Ninja -S "$SOURCES/llvm-$LLVM_VER/llvm" \
#-DCMAKE_INSTALL_PREFIX="/usr/lib/clang/21" \
#-DLLVM_ENABLE_PROJECTS="clang;lld" \
#-DLLVM_ENABLE_RUNTIMES="compiler-rt;libunwind;libcxx;libcxxabi" \
#-DCROSS_COMPILE_TARGET="$TARGET" \
#-DCLANG_DEFAULT_CXX_STDLIB=libc++ \
#-DCLANG_DEFAULT_RTLIB=compiler-rt \
#-DCLANG_DEFAULT_UNWINDLIB=libunwind \
#-DCMAKE_C_COMPILER=clang \
#-DCMAKE_CXX_COMPILER=clang++ \
#-DCMAKE_ASM_COMPILER=clang \
#-DCOMPILER_RT_DEFAULT_TARGET_ONLY=ON \
#-DCMAKE_SYSROOT="$SYSROOT"
#samu -C build
#DESTDIR=$SYSROOT samu install
#
#cd ..
mkdir -p compiler-rt
cd compiler-rt
cmake -G Ninja "$SOURCES/llvm-$LLVM_VER/compiler-rt" \
-DLLVM_ENABLE_LIBEDIT=OFF \
-DLLVM_ENABLE_LIBPFM=OFF \
-DCROSS_COMPILE_TARGET="$TARGET" \
-DCMAKE_C_FLAGS="--sysroot=$SYSROOT" \
-DCMAKE_ASM_FLAGS="--sysroot=$SYSROOT" \
-DCOMPILER_RT_BUILD_BUILTINS=ON \
-DCOMPILER_RT_INCLUDE_TESTS=OFF \
-DCOMPILER_RT_BUILD_CRT=ON \
-DCOMPILER_RT_BUILD_SANITIZERS=OFF \
-DCOMPILER_RT_BUILD_XRAY=OFF \
-DCOMPILER_RT_BUILD_PROFILE=OFF \
-DCOMPILER_RT_BUILD_MEMPROF=OFF \
-DCOMPILER_RT_BUILD_CTX_PROFILE=OFF \
-DCOMPILER_RT_BUILD_GWP_ASAN=OFF \
-DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
-DCOMPILER_RT_BUILD_PROFILE=OFF \
-DCOMPILER_RT_BUILD_MEMPROF=OFF \
-DCOMPILER_RT_BUILD_ORC=OFF \
-DCOMPILER_RT_DEFAULT_TARGET_ONLY=ON \
-DCOMPILER_RT_INSTALL_PATH="/usr/lib/clang/21/" \
-DCMAKE_ASM_COMPILER=clang \
-DCMAKE_C_COMPILER=clang \
-DCMAKE_CXX_COMPILER=clang++ \
-DCMAKE_ASM_COMPILER_TARGET=$TARGET \
-DCMAKE_C_COMPILER_TARGET=$TARGET \
-DCMAKE_CXX_COMPILER_TARGET=$TARGET \
-DCMAKE_SYSROOT="$SYSROOT" \
-DCMAKE_INSTALL_PREFIX="/usr" \
-DCMAKE_C_COMPILER_WORKS=1 \
-DCMAKE_CXX_COMPILER_WORKS=1 \
-DCMAKE_SIZEOF_VOID_P=8

samu
DESTDIR=$SYSROOT samu install

touch $REPO_ROOT/.compiler-rt
